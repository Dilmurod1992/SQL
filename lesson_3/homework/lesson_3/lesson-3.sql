create database lesson_4
use lesson_4

                    -- EASY --

--BULK INSERT is used to load data from a data file into a table.

--There are 2 kinds of file formats:
--Non-XML format files
--XML format files


Create table Products(ProductID INT PRIMARY KEY, ProductName VARCHAR(50), Price DECIMAL(10,2))
select* from Products

insert into Products(ProductID, ProductName, Price) values
(1, 'Phone', 1000),
(2, 'Notebook', 2000),
(3, 'Watch', 3000)

select* from Products


--Null in other way means zero or empty value. Thus, Null means you can leave that field empty. And Not Null means you can't leave the value of that field empty

ALTER TABLE Products 
ADD CONSTRAINT ProductName_unique 
UNIQUE(ProductName)

/*The purpose of writing comment in SQL is to analyze and understand the execution plan of a query without actually executing it.*/


Create table Categories(CategoryID int PRIMARY KEY, CategoryName varchar(50) UNIQUE)
select* from Categories

insert into Categories(CategoryID, CategoryName) values
(1, 'sweet'),
(2, 'salty'),
(3, 'sour'),
(4, 'expensive'),
(5, 'cheap'),
(6, 'useful'),
(7, 'harmful'),
(8, 'good'),
(9, 'bad')



--An identity column is a column (also known as a field) in a database table that is made up of values generated by the database. 


                  --MEDIUM LEVEL--

truncate table Products
select* from Products



Create table Employees(EmployeeID int, FirstName varchar(50), LastName varchar(50), email varchar(50), Salary int)
select* from Employees




bulk insert [lesson_4].[dbo].[Products]
from 'C:\Users\Dilmurod\Desktop\practice text.txt'
with(
firstrow=1,
fieldterminator=',',
rowterminator='\n'
)

select* from Products

alter table Products
add Product_category int foreign key references CategoryID

/*The primary key uniquely identifies each record in the table. 
The unique key serves as a unique identifier for records when a primary key is absent. 
The primary key cannot store NULL values. The unique key can store a null value, but only one NULL value is allowed.*/


drop table Products
select* from Products


Create table Products(ProductID INT PRIMARY KEY, ProductName VARCHAR(50), Price DECIMAL(10,2) check (Price>0))


bulk insert [lesson_4].[dbo].[Products]
from 'C:\Users\Dilmurod\Desktop\practice text.txt'
with(
firstrow=1,
fieldterminator=',',
rowterminator='\n'
)

select* from Products

alter table Products
add Stock int 


update Products
set [Stock]=0
where Stock is null

--A foreign key (FK) is a column or combination of columns that is used to establish and enforce a link between the data in two tables to control the data that can be stored in the foreign key table.


						--HARD LEVEL--


create table Customers(CustomerID int primary key IDENTITY(100,10), CustomerName varchar(50), CustomerAge int check(CustomerAge>=18))

select * from Customers
